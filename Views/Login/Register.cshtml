@model WebApplication2.Models.RegisterModel

<link href="~/bootstrap/css/bootstrap.css" rel="stylesheet">
<link href="~/bootstrap/css/secretStyle.css" rel="stylesheet">
<script type="text/javascript" href="~/bootstrap/js/bootstrap.js"></script>

@using (Html.BeginForm("Register", "Login", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="d-flex justify-content-center">
        <h1>
            <i class="fa fa-heart"></i>
            Come in to out cute chat!
            <i class="fa fa-heart"></i>
        </h1>
    </div>
    
    <div class="d-flex justify-content-center">
        <div class="form-group form-signin">
            <div class="form-item">
                @Html.TextBoxFor(m => m.FirstName, new { @placeholder = "Enter your firstname", @class = "transparent-input" })
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
            <div>
                @Html.TextBoxFor(m => m.LastName, new { @placeholder = "Enter your lastname", @class = "transparent-input" })
                @Html.ValidationMessageFor(m => m.LastName)
            </div>
            <div>
                @Html.TextBoxFor(m => m.MobileOrEmail, new { @placeholder = "email or phone", @class = "transparent-input" })
                @Html.ValidationMessageFor(m => m.MobileOrEmail)
            </div>
            <div>
                @Html.PasswordFor(m => m.Password, new { @placeholder = "Enter your password", @class = "transparent-input" })
                @Html.ValidationMessageFor(m => m.Password)
            </div>
            <div>
                @Html.TextBoxFor(m => m.Login, new { @placeholder = "Enter your login", @class = "transparent-input" })
                @Html.ValidationMessageFor(m => m.Login)
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 d-flex justify-content-center">
                    <button class="btn btn-outline-primary fa fa-heart" type="submit">Register</button>
                </div>
            </div>
        </div>
    </div>

    {
        var errors = (string[])ViewData["RegisterErrors"];
        if (errors != null && errors.Any())
        {
            foreach (var err in errors)
            {
                <p>@err</p>
            }
        }
    }
}